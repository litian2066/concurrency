package com.concurrency.example.thredLocal;
/**
 * 线程封闭;
 * 把对象封装到一个线程里 必须是线程安全的
 * 1.ad-hoc 最糟糕 忽略
 * 2.堆栈封闭:
 *     1).就是我们的局部变量,多个线程访问一个方法 里面的局部变量都会被拷贝一份到线程的栈中 所以局部变量不会被多个线程共享的
 *        不会出现并发问题
 * 3.ThreadLocal: 特别好的封闭方法
 *     1).每个线程都有一个map map里面的key是线程本地对象 以线程的变量副本作为value
 *          map由ThreadLocal来维护的 由ThreadLocal来向map设置线程的变量值以及获取值
 *          所以对于不同的线程 每次获取副本值的时候  别的线程并不能获取当前线程的副本值
 *          就可以做到线程隔离 多个线程互不打扰


    每个请求对应服务器就是一个线程 我们希望线程隔离 我们通过filter可以直接取出当前的用户 把数据存在了ThreadLocal 当线程被mapper或者其他
 处理的时候 很可能需要用户  直接从ThreadLocal里面获取 很方便  如果不用 我们就要去requeset里面获取   传递太多 会导致代码看起来很不舒服

 **/